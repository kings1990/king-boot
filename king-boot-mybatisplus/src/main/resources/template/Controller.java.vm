package ${package}.${moduleName}.api;

import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;
import org.springframework.security.access.prepost.PreAuthorize;
import lombok.AllArgsConstructor;
import org.springframework.web.bind.annotation.*;


/**
 * <p class="detail">
 * 功能:${comments}
 * </p>
 * @author ${author}
 * @ClassName ${className}api.
 * @Version V1.0.
 * @date ${datetime}
 */
@RestController
@AllArgsConstructor
@RequestMapping("/${pathName}s" )
public class ${className}Api {

    private final  ${className}Service ${classname}Service;
    
    /**
	 * <p class="detail">
	 * 功能:分页查询
	 * </p>
	 * 
	 * @param ${classname} ${comments}
	 * @return RestResponse
	 * @author ${author}
	 * @date ${datetime}
	 */
    @GetMapping("/page" )
    public RestResponse<${classname}> get${className}Page(Page page, ${className} ${classname}) {
        return new RestResponse<>(${classname}Service.page(page, Wrappers.query(${classname})));
    }
    
    /**
     * <p class="detail">
     * 功能:通过id查询${comments}
     * </p>
     *
     * @param ${pk.lowerAttrName} id
     * @return RestResponse
     * @author ${author}
     * @date ${datetime}
     */
    @GetMapping("/{${pk.lowerAttrName}}" )
    public RestResponse<${classname}> getById(@PathVariable("${pk.lowerAttrName}" ) ${pk.attrType} ${pk.lowerAttrName}) {
        return new RestResponse<>(${classname}Service.getById(${pk.lowerAttrName}));
    }
    
    /**
     * <p class="detail">
     * 功能:新增${comments}
     * </p>
     *
     * @param ${classname} ${comments}
     * @return RestResponse
     * @author ${author}
     * @date ${datetime}
     */
    @PostMapping
    public RestResponse save(@RequestBody ${className} ${classname}) {
        return new RestResponse<>(${classname}Service.save(${classname}));
    }
    
    /**
     * <p class="detail">
     * 功能:修改${comments}
     * </p>
     *
     * @param ${classname} ${comments}
     * @return RestResponse
     * @author ${author}
     * @date ${datetime}
     */
    @PutMapping
    public RestResponse updateById(@RequestBody ${className} ${classname}) {
        return new RestResponse<>(${classname}Service.updateById(${classname}));
    }
    
    /**
     * <p class="detail">
     * 功能:通过id删除${comments}
     * </p>
     *
     * @param ${pk.lowerAttrName} id
     * @return RestResponse
     * @author ${author}
     * @date ${datetime}
     */
    @DeleteMapping("/{${pk.lowerAttrName}}" )
    public RestResponse removeById(@PathVariable ${pk.attrType} ${pk.lowerAttrName}) {
        return new RestResponse<>(${classname}Service.removeById(${pk.lowerAttrName}));
    }

}
